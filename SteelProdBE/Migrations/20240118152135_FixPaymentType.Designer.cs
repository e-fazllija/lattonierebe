// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SteelProdBE.Data;

#nullable disable

namespace SteelProdBE.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240118152135_FixPaymentType")]
    partial class FixPaymentType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SteelProdBE.Entities.Accessory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccessoryTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryTimeframe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DeliveryTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("MinimumStock")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PackageQuantity")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("SupplierArticleCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("UnitOfMeasure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccessoryTypeId");

                    b.HasIndex("DeliveryTypeId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Accessories");
                });

            modelBuilder.Entity("SteelProdBE.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("SteelProdBE.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Activity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdministrativeOfficeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdministrativeOfficeCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdministrativeOfficeCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdministrativeOfficeProvince")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdministrativeOfficeZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankCoordinates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("DeliveryMethodId")
                        .HasColumnType("int");

                    b.Property<string>("Discount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FiscalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Increment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatingOfficeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatingOfficeCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatingOfficeCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatingOfficeProvince")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatingOfficeZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PEC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecipientAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecipientCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecipientCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecipientProvince")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecipientZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniqueCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VATNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("SteelProdBE.Entities.DDT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aspect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COP1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COP2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DdtNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Packages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonForTransportation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpettabileAddress1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpettabileAddress2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpettabileFiscalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpettabileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpettabileVatNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vehicle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("VisiblePrice")
                        .HasColumnType("bit");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("WithdrawalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("XmlId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DDTs");
                });

            modelBuilder.Entity("SteelProdBE.Entities.DDTComponent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DDTId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quantity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DDTId");

                    b.ToTable("DDTComponents");
                });

            modelBuilder.Entity("SteelProdBE.Entities.GoodReceipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocumentNumber")
                        .HasColumnType("int");

                    b.Property<int>("GoodId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int>("TypeID")
                        .HasColumnType("int");

                    b.Property<string>("UnitOfMeasure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("GoodReceipts");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AdvancePayment")
                        .HasColumnType("bit");

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("JobId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Marking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dx")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdFac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Larg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Str")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Markings");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeliveryMethodId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryTiming")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Function")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MaterialTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MinimumStock")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PackagingQuantity")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("SupplierArticleCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("UnitOfMeasure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MaterialTypeId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("SteelProdBE.Entities.ModuleXml", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AvanzamentoDeltaX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ByCustomer")
                        .HasColumnType("bit");

                    b.Property<bool>("ByMaterial")
                        .HasColumnType("bit");

                    b.Property<bool>("ByMaterialColor")
                        .HasColumnType("bit");

                    b.Property<bool>("ByModel")
                        .HasColumnType("bit");

                    b.Property<bool>("ByRange")
                        .HasColumnType("bit");

                    b.Property<bool>("CeilDa")
                        .HasColumnType("bit");

                    b.Property<bool>("CeilDx")
                        .HasColumnType("bit");

                    b.Property<bool>("CeilDxRip")
                        .HasColumnType("bit");

                    b.Property<bool>("CeilNRip")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CutNameEnd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CutNameStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Da")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeltaX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dx")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DxRip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LoopCutIdCode")
                        .HasColumnType("bit");

                    b.Property<string>("MaterialColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameXmlOpera")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RoundDa")
                        .HasColumnType("bit");

                    b.Property<bool>("RoundDx")
                        .HasColumnType("bit");

                    b.Property<bool>("RoundDxRip")
                        .HasColumnType("bit");

                    b.Property<bool>("RoundNRip")
                        .HasColumnType("bit");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ModulesXml");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("EntityClassId")
                        .HasColumnType("int");

                    b.Property<string>("EntityClassTypologie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Identifier")
                        .HasColumnType("int");

                    b.Property<bool>("Seen")
                        .HasColumnType("bit");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("SteelProdBE.Entities.ProTubeJobs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("JobBarNum")
                        .HasColumnType("int");

                    b.Property<double?>("JobBarTotLen")
                        .HasColumnType("float");

                    b.Property<long?>("JobEstProdTime")
                        .HasColumnType("bigint");

                    b.Property<string>("JobName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("JobNestPercPartPlacing")
                        .HasColumnType("int");

                    b.Property<int?>("JobPartNumPlaced")
                        .HasColumnType("int");

                    b.Property<int?>("JobScrapPerc")
                        .HasColumnType("int");

                    b.Property<bool>("JobTransferred")
                        .HasColumnType("bit");

                    b.Property<bool>("Nesting")
                        .HasColumnType("bit");

                    b.Property<int>("ProTubeJobId")
                        .HasColumnType("int");

                    b.Property<bool>("ProfilesQuantityUpdated")
                        .HasColumnType("bit");

                    b.Property<string>("TransferError")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("XmlId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProTubeJobs");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("BarLength")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("BarsCount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeliveryMethodId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryTiming")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Depth")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Height")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("InternalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaterialQuality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaterialTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MinimumStock")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PackagingQuantity")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProfileTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("SupplierArticleCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Thickness")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("UnitOfMeasure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("WeightPerMeter")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("Width")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("SteelProdBE.Entities.ProfileXml", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProfilesXml");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FiscalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Mobile")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PEC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<long?>("Phone")
                        .HasColumnType("bigint");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniqueCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VATNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PaymentTypeId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Typologies.AccessoryType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AccessoryTypes");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Typologies.CustomerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CustomerTypes");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Typologies.DeliveryType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DeliveryTypes");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Typologies.GoodReceiptType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GoodReceiptTypes");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Typologies.MaterialType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MaterialTypes");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Typologies.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PaymentTypes");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Typologies.ProfileType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProfileTypes");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.Bpf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Created")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Error")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkOrderId")
                        .HasColumnType("int");

                    b.Property<int>("XmlId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bpfs");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("XmlOperaId")
                        .HasColumnType("int");

                    b.Property<string>("job_creation_timestamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("job_creator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("job_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("job_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("job_order_reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("job_status_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("job_vat_rate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("job_year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("XmlOperaId")
                        .IsUnique();

                    b.ToTable("Job");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FKEY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OperaColorsId")
                        .HasColumnType("int");

                    b.Property<string>("PKEY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("col_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("col_type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OperaColorsId");

                    b.ToTable("OperaColor");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaColors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComponentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OperaColors");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaComponent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OperaColorsId")
                        .HasColumnType("int");

                    b.Property<int>("OperaJobComponentId")
                        .HasColumnType("int");

                    b.Property<int?>("OperaJobComponentsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("cmp_category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cmp_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cmp_height")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cmp_idcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cmp_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cmp_panes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cmp_price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cmp_quantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cmp_series")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cmp_system")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cmp_vat_rate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cmp_width")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OperaColorsId");

                    b.HasIndex("OperaJobComponentsId");

                    b.ToTable("OperaComponent");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaCut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperaCutsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("cut_idcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cut_leftangle_wt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cut_lenght_encumbrance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cut_lenght_external")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cut_lenght_internal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cut_lenght_max")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cut_lenght_tube")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cut_pieces")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cut_rightangle_wt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("wt_piece_of_piece")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OperaCutsId");

                    b.ToTable("OperaCut");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaCuts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OperaCuts");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaJobComponents", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("JobId")
                        .IsUnique();

                    b.ToTable("OperaJobComponents");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaJobCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("cst_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cst_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobId")
                        .IsUnique();

                    b.ToTable("OperaJobCustomer");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaJobPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("job_last_saved_price")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobId")
                        .IsUnique();

                    b.ToTable("OperaJobPrice");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaMachining", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperaMachiningsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("mach_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OperaMachiningsId");

                    b.ToTable("OperaMachining");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaMachinings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperaCutId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OperaCutId")
                        .IsUnique();

                    b.ToTable("OperaMachinings");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OperaCutsId")
                        .HasColumnType("int");

                    b.Property<int>("OperaMaterialsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("mat_alternative_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mat_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mat_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mat_profile_function")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mat_profile_function2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mat_profile_function2_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mat_profile_function3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mat_profile_function3_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mat_profile_function_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mat_quantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mat_quantity_on_unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mat_supplier_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mat_system")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mat_width")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OperaCutsId");

                    b.HasIndex("OperaMaterialsId");

                    b.ToTable("OperaMaterial");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaMaterialColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FKEY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OperaMaterialColorsId")
                        .HasColumnType("int");

                    b.Property<string>("PKEY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("col_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("col_type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OperaMaterialColorsId");

                    b.ToTable("OperaMaterialColor");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaMaterialColors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperaMaterialId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OperaMaterialId")
                        .IsUnique();

                    b.ToTable("OperaMaterialColors");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaMaterials", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("JobId")
                        .IsUnique();

                    b.ToTable("OperaMaterials");
                });

            modelBuilder.Entity("SteelProdBE.Entities.XmlOpera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DDTGenerato")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAccreditoAcconto")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataApprontamentoMerce")
                        .HasColumnType("datetime2");

                    b.Property<string>("Errore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FAccontoGenerata")
                        .HasColumnType("bit");

                    b.Property<bool>("FatturaGenerata")
                        .HasColumnType("bit");

                    b.Property<string>("FileAccessori")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileCommessa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileOrdine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdTipologiaCommessa")
                        .HasColumnType("int");

                    b.Property<bool>("MercePronta")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PercentualeFAcconto")
                        .HasColumnType("int");

                    b.Property<string>("Reso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotaleFAcconto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("XmlOpera");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SteelProdBE.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SteelProdBE.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SteelProdBE.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SteelProdBE.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SteelProdBE.Entities.Accessory", b =>
                {
                    b.HasOne("SteelProdBE.Entities.Typologies.AccessoryType", "AccessoryType")
                        .WithMany()
                        .HasForeignKey("AccessoryTypeId");

                    b.HasOne("SteelProdBE.Entities.Typologies.DeliveryType", "DeliveryMethod")
                        .WithMany()
                        .HasForeignKey("DeliveryTypeId");

                    b.HasOne("SteelProdBE.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("AccessoryType");

                    b.Navigation("DeliveryMethod");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("SteelProdBE.Entities.DDTComponent", b =>
                {
                    b.HasOne("SteelProdBE.Entities.DDT", "DDT")
                        .WithMany()
                        .HasForeignKey("DDTId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DDT");
                });

            modelBuilder.Entity("SteelProdBE.Entities.GoodReceipt", b =>
                {
                    b.HasOne("SteelProdBE.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Material", b =>
                {
                    b.HasOne("SteelProdBE.Entities.Typologies.MaterialType", "MaterialType")
                        .WithMany()
                        .HasForeignKey("MaterialTypeId");

                    b.HasOne("SteelProdBE.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("MaterialType");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Supplier", b =>
                {
                    b.HasOne("SteelProdBE.Entities.Typologies.PaymentType", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentTypeId");

                    b.Navigation("PaymentMethod");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.Job", b =>
                {
                    b.HasOne("SteelProdBE.Entities.XmlOpera", null)
                        .WithOne("Job")
                        .HasForeignKey("SteelProdBE.Entities.Xml.Job", "XmlOperaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaColor", b =>
                {
                    b.HasOne("SteelProdBE.Entities.Xml.OperaColors", null)
                        .WithMany("OperaColor")
                        .HasForeignKey("OperaColorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaComponent", b =>
                {
                    b.HasOne("SteelProdBE.Entities.Xml.OperaColors", "OperaColors")
                        .WithMany()
                        .HasForeignKey("OperaColorsId");

                    b.HasOne("SteelProdBE.Entities.Xml.OperaJobComponents", null)
                        .WithMany("OperaComponent")
                        .HasForeignKey("OperaJobComponentsId");

                    b.Navigation("OperaColors");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaCut", b =>
                {
                    b.HasOne("SteelProdBE.Entities.Xml.OperaCuts", null)
                        .WithMany("OperaCut")
                        .HasForeignKey("OperaCutsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaJobComponents", b =>
                {
                    b.HasOne("SteelProdBE.Entities.Xml.Job", null)
                        .WithOne("OperaJobComponents")
                        .HasForeignKey("SteelProdBE.Entities.Xml.OperaJobComponents", "JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaJobCustomer", b =>
                {
                    b.HasOne("SteelProdBE.Entities.Xml.Job", null)
                        .WithOne("OperaJobCustomer")
                        .HasForeignKey("SteelProdBE.Entities.Xml.OperaJobCustomer", "JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaJobPrice", b =>
                {
                    b.HasOne("SteelProdBE.Entities.Xml.Job", null)
                        .WithOne("OperaJobPrice")
                        .HasForeignKey("SteelProdBE.Entities.Xml.OperaJobPrice", "JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaMachining", b =>
                {
                    b.HasOne("SteelProdBE.Entities.Xml.OperaMachinings", null)
                        .WithMany("OperaMachining")
                        .HasForeignKey("OperaMachiningsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaMachinings", b =>
                {
                    b.HasOne("SteelProdBE.Entities.Xml.OperaCut", null)
                        .WithOne("OperaMachinings")
                        .HasForeignKey("SteelProdBE.Entities.Xml.OperaMachinings", "OperaCutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaMaterial", b =>
                {
                    b.HasOne("SteelProdBE.Entities.Xml.OperaCuts", "OperaCuts")
                        .WithMany()
                        .HasForeignKey("OperaCutsId");

                    b.HasOne("SteelProdBE.Entities.Xml.OperaMaterials", null)
                        .WithMany("OperaMaterial")
                        .HasForeignKey("OperaMaterialsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperaCuts");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaMaterialColor", b =>
                {
                    b.HasOne("SteelProdBE.Entities.Xml.OperaMaterialColors", null)
                        .WithMany("OperaMaterialColor")
                        .HasForeignKey("OperaMaterialColorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaMaterialColors", b =>
                {
                    b.HasOne("SteelProdBE.Entities.Xml.OperaMaterial", null)
                        .WithOne("OperaMaterialColors")
                        .HasForeignKey("SteelProdBE.Entities.Xml.OperaMaterialColors", "OperaMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaMaterials", b =>
                {
                    b.HasOne("SteelProdBE.Entities.Xml.Job", null)
                        .WithOne("OperaMaterials")
                        .HasForeignKey("SteelProdBE.Entities.Xml.OperaMaterials", "JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.Job", b =>
                {
                    b.Navigation("OperaJobComponents");

                    b.Navigation("OperaJobCustomer");

                    b.Navigation("OperaJobPrice");

                    b.Navigation("OperaMaterials")
                        .IsRequired();
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaColors", b =>
                {
                    b.Navigation("OperaColor");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaCut", b =>
                {
                    b.Navigation("OperaMachinings");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaCuts", b =>
                {
                    b.Navigation("OperaCut");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaJobComponents", b =>
                {
                    b.Navigation("OperaComponent");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaMachinings", b =>
                {
                    b.Navigation("OperaMachining");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaMaterial", b =>
                {
                    b.Navigation("OperaMaterialColors");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaMaterialColors", b =>
                {
                    b.Navigation("OperaMaterialColor");
                });

            modelBuilder.Entity("SteelProdBE.Entities.Xml.OperaMaterials", b =>
                {
                    b.Navigation("OperaMaterial");
                });

            modelBuilder.Entity("SteelProdBE.Entities.XmlOpera", b =>
                {
                    b.Navigation("Job")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
